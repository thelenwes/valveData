{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Readme for valveData.py\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 Library to extract data from valve using a REST interface.  Optionally, data\
can be detected for gaps, resampled and put into a obspy Stream structure.  Requires\
a parameter file called 'config.json' in the same directory as script.  Contents\
should look something like this:\
\{\
  "host": "hvo-rest.wr.usgs.gov"\
\}\
See requests documentation for more details.\
--------------------------------------------------------------------\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
Requirements:\
json\
requests\
obspy (for splitData, data2obspy, vtime2obspytime, obspytime2vtime)\
\
\
RSAM DATA Example:\
import valveData\
# Gets last 12 hours of RSAM data\
date, datenum, data = valveData.getRsamLast('NPT$HWZ$HV, '-12h') \
# Detects gaps greater than 120 seconds\
gapIndex = valveData.detectGap(date, 120)  \
# Splits data based on gaps and resamples\
slicedDates, slicedData = valveData.splitData(date, data, gapIndex, delta=60, resample=True)  \
# Converts to obspy object\
streamDataRSAM = valveData.data2obspy(slicedDates, slicedData, channel)\
\
}